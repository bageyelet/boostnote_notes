createdAt: "2018-04-20T12:59:13.623Z"
updatedAt: "2018-06-02T10:07:03.762Z"
type: "MARKDOWN_NOTE"
folder: "6ea38810de8e4ec8497c"
title: "Switch configuration"
content: '''
  # Switch configuration
  
  in `enable` mode:
  - `show vlan brief`: print info about configured vlan
  - `show interfaces <interface_name> switchport`: show info about interface
  
  ### VLAN
  in `configuration` mode:
  - `vlan <number>`: define the vlan on the switch (then exit)
  - `interface <name_interface>`: switch to interface mode
    - `switchport mode access`: set the current interface to access mode (i.e. comunication with an host)
    - `switchport access vlan <number_vlan>`: set the vlan for the specified interface in access mode
    - `switchport mode trunk`: set the current interface to trunk mode (i.e. communication between switches)
    - `switchport trunk native vlan <number_vlan>`: set native vlan for interfaces in trunk mode
    
  
  **NOTE:** vlan 1 is reserved to default vlan.
  **NOTE:** vlan 99 is typically (not mandatory) used for management.
  **NOTE:** typically the native interface for trunk interfaces is vlan 99 (not mandatory).
  
  ### Telnet access
  To configure telnet access, it's necessary to configure an IP address for the switch. Typically, a new vlan (managment vlan) is configured, an IP address is configured for each switch on this new vlan and only one host is added to this vlan (this host is the only one who can configure the switch via telnet).
  in `configuration` mode:
  - `line vty 0 15`: set password for telnet
    - `password <password>`
    -  `login`
  - `enable secret <password>`: enable enable mode password
  - `interface vlan <number_vlan>`: enter in interface mode for the virtual interface of the given vlan
    - `ip address <ip> <mask>`: set ip for the current vlan
  
  ### VTP
  Used to spread the VLANs among multiple switches, configuring only one (interfaces must be configured manually!).
  
  Three modes:
  - __Server__ (the one who distribute)
  - __Client__ (the one who receive)
  - __Transparent__ (passive mode): Used to configure on the client other vlans (in client mode you cannot configure other vlans other then the ones received by the server)
  
  in `enable` mode:
  - `show vtp status`: show info about vtp
  
  in `configuration` mode:
  - `vtp mode [server|client|transparent]`: choose mode
  - `vtp domain <name_of_the_domain>`: change the name of the domain. It'll be redistributed automatically to clients but if there are more than one domains in the network, set it manually on clients!
  - `vtp password <password>`: set password for vtp
  
  ### Inter-VLAN communication
  #### First way:
  We need a router connected to a switch with _n_ interfaces where _n_ is the number of VLANS that needs to communicate. The interfaces of the switch must be in access mode.
  **NOTE**: PC must have as default gateway the IP of the router on its vlan.
  **problem**: a lot of physical interfaces of the router are used!
  #### Second way:
  If we do not want to use one physical interface for each VLAN, we can use a single physical interface which is splitted in many __subinterfaces__. The switch interface must be in trunk mode.
  in `configuration` mode on router:
  - `interface <interface>.<vlan_number>`: configuration of virtual interface obtained by splitting the interface _interface_. ex: `interface Fa 0/0.10`
    - `encapsulation dot1q <vlan_number>`
    - `ip address <ip_address> <mask>`
  
  **NOTE**: The interface must be switched on with `no shutdown`.
  
  ### ACL
  Configured only on routers! not on switches.
  in `enable` mode:
  - `show access-lists`: list access-lists configured on the router
  ##### Stardard
  in `configuration` mode:
  - `access-list <number> <deny/permit> <source_ip> <source-wildcard>`: define rule for the source ip
  - in `interface` configuration:
    - `ip access-group <acl-number> <in/out>`: apply to the interface the acl with number *acl-number*.
  
  **NOTE**: Applying an acl will add an implicit `deny all`. Rules are applied in order!
  **NOTE**: For all ips you can use `any`. For a single host you can use `host` in access-list configuration.
  **NOTE**: Do not use acl number 100.
  
  ##### Extended
  in `configuration` mode:
  - `access-list <number> <permit/deny> <protocol> <source> [<source-wildcard> <destination-ip> <destination-mask> <operator> <operand>]`: similar to the standard, but many more field can be configured. Here a list of examples:
    - `access-list 100 permit tcp 172.0.0.0 0.0.0.255 any eq telnet`: allow tcp traffic with destination port 23 (telnet), source in the subnet 172.0.0.0/24 and any destination.
    - `access-list 100 permit tcp any host 10.10.10.254 eq www`: allow traffic on port 80 (www) from any host, to 10.10.10.254.
    - `access-list 100 permit ip any any`: permit all traffic (note that command are checked in order: if before this command there is another rule, the other rule is checked first)
  
  **NOTE**: access list is applied to an interface with `ip access-group` command, the same as standard.
  
  ##### Named
  in `configuration` mode:
  - `ip access-list <standard|extended> <access-list name>`: declaring the new named access list
    - `<permit|deny> <protocol> <source> <source-wildcard> [operator [port]] <destination> <destination-wildcard> [operator [port]] [established] [precedence <precedence>] [tos <tos>] [log] [time-range <time-range>]`
  
  Modify a rule example:
    - `ip access-list extended SERVER-ACCESS`
      - `no 20`
      - `20 permit ip host 192.168.1.77 any`
  
  Insert a rule between two rules (e.g. 25 between 20 and 30):
    - `ip access-list extended SERVER-ACCESS`
      - `25 deny ip host 192.168.1.88 any`
  
  ##### Ethernet security
  in `configuration` mode:
  - `switchport port-security mac-address <mac-address>`: configure mac security access to the switch statically
  - `switchport port-security [mac-address sticky]`: mac address is configured dynamically: the first pc that tries to connect is saved. If sticky, the command is saved in running-config
  **NOTE**: do not configure on trunk ports.
  **NOTE**: the command `switchport port-security` is mandatory since it activates port-security in either static or dynamic case.
'''
tags: []
isStarred: false
isTrashed: false
